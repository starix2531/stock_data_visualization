{"ast":null,"code":"var _jsxFileName = \"/Users/chenghaosun/stats418/stock_data_visualization/frontend/src/Dashboard.js\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  const fetchData = () => {\n    const ticker = document.getElementById(\"ticker\").value;\n    const startDate = document.getElementById(\"startDate\").value;\n    const endDate = document.getElementById(\"endDate\").value;\n    const url = \"/api/stock_data?ticker=\".concat(ticker, \"&start_date=\").concat(startDate, \"&end_date=\").concat(endDate);\n    d3.json(url).then(data => {\n      // Process the fetched data and create the visualization\n      // Here, we are creating a line chart\n\n      // using D3.js\n      // ...\n\n      // Example code to create a line chart\n      const margin = {\n        top: 20,\n        right: 20,\n        bottom: 30,\n        left: 50\n      };\n      const width = 800 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n      const svg = d3.select(\"#chart\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\".concat(margin.left, \",\").concat(margin.top, \")\"));\n      const parseDate = d3.timeParse(\"%Y-%m-%d\");\n      data.forEach(d => {\n        d.Date = parseDate(d.Date);\n        d.Close = +d.Close;\n      });\n      const x = d3.scaleTime().domain(d3.extent(data, d => d.Date)).range([0, width]);\n      const y = d3.scaleLinear().domain([0, d3.max(data, d => d.Close)]).range([height, 0]);\n      svg.append(\"g\").attr(\"transform\", \"translate(0,\".concat(height, \")\")).call(d3.axisBottom(x));\n      svg.append(\"g\").call(d3.axisLeft(y));\n      svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(d => x(d.Date)).y(d => y(d.Close)));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Price Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"ticker\",\n      children: \"Select Ticker:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"ticker\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"AAPL\",\n        children: \"AAPL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"GOOGL\",\n        children: \"GOOGL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"MSFT\",\n        children: \"MSFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"startDate\",\n      children: \"Start Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"startDate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"endDate\",\n      children: \"End Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"endDate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","d3","jsxDEV","_jsxDEV","Dashboard","fetchData","ticker","document","getElementById","value","startDate","endDate","url","concat","json","then","data","margin","top","right","bottom","left","width","height","svg","select","append","attr","parseDate","timeParse","forEach","d","Date","Close","x","scaleTime","domain","extent","range","y","scaleLinear","max","call","axisBottom","axisLeft","datum","line","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onClick","_c","$RefreshReg$"],"sources":["/Users/chenghaosun/stats418/stock_data_visualization/frontend/src/Dashboard.js"],"sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Dashboard.css\";\n\nconst Dashboard = () => {\n  const fetchData = () => {\n    const ticker = document.getElementById(\"ticker\").value;\n    const startDate = document.getElementById(\"startDate\").value;\n    const endDate = document.getElementById(\"endDate\").value;\n\n    const url = `/api/stock_data?ticker=${ticker}&start_date=${startDate}&end_date=${endDate}`;\n\n    d3.json(url).then((data) => {\n      // Process the fetched data and create the visualization\n      // Here, we are creating a line chart\n      \n      // using D3.js\n      // ...\n\n      // Example code to create a line chart\n      const margin = { top: 20, right: 20, bottom: 30, left: 50 };\n      const width = 800 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      const svg = d3\n        .select(\"#chart\")\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n      const parseDate = d3.timeParse(\"%Y-%m-%d\");\n      data.forEach((d) => {\n        d.Date = parseDate(d.Date);\n        d.Close = +d.Close;\n      });\n\n      const x = d3\n        .scaleTime()\n        .domain(d3.extent(data, (d) => d.Date))\n        .range([0, width]);\n\n      const y = d3\n        .scaleLinear()\n        .domain([0, d3.max(data, (d) => d.Close)])\n        .range([height, 0]);\n\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0,${height})`)\n        .call(d3.axisBottom(x));\n\n      svg.append(\"g\").call(d3.axisLeft(y));\n\n      svg\n        .append(\"path\")\n        .datum(data)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"steelblue\")\n        .attr(\"stroke-width\", 1.5)\n        .attr(\n          \"d\",\n          d3\n            .line()\n            .x((d) => x(d.Date))\n            .y((d) => y(d.Close))\n        );\n    });\n  };\n\n  return (\n    <div>\n      <h1>Stock Price Visualization</h1>\n\n      <label htmlFor=\"ticker\">Select Ticker:</label>\n      <select id=\"ticker\">\n        <option value=\"AAPL\">AAPL</option>\n        <option value=\"GOOGL\">GOOGL</option>\n        <option value=\"MSFT\">MSFT</option>\n        {/* Add more options for available tickers */}\n      </select>\n\n      <label htmlFor=\"startDate\">Start Date:</label>\n      <input type=\"date\" id=\"startDate\" />\n\n      <label htmlFor=\"endDate\">End Date:</label>\n      <input type=\"date\" id=\"endDate\" />\n\n      <button onClick={fetchData}>Fetch Data</button>\n\n      <div id=\"chart\"></div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}